#  Rules to combat brute force attacks using XMLRPC
# 
#  Failed requests (malformed, bad password, etc.) all have "faultstring" in the response. 
#


# this collection initialization should probably be moved, since it is repeated in other rules
SecAction "phase:1,nolog,pass,initcol:ip=%{REMOTE_ADDR},id:19000"

# change body processor to XML 
SecRule REQUEST_URI "xmlrpc.php" "id:19001,phase:1,log,msg:'locationmatch xmlrpc',ctl:requestBodyProcessor=XML"

<LocationMatch "/xmlrpc.php">
    #SecDebugLogLevel 9
    #SecDebugLog /var/log/httpd/modsec_troubleshooting.log

    SecRule RESPONSE_BODY "faultString" "phase:4,\
			id:19003,\
			log,msg:'XMLRPC - with faultstring',\
			setvar:ip.bad_xmlrpc_count=+1,\
			deprecatevar:ip.bad_xmlrpc_count=1/600"

    SecRule ip:bad_xmlrpc_count "@gt 5" "phase:4,\
			id:19004,\
			setvar:ip.xmlrpc_block=1,\
			expirevar:ip.xmlrpc_block=3600"

    SecRule ip:xmlrpc_block "@gt 0" "phase:2,\
			id:19005,\
			deny,\
			redirect:https://%{SERVER_NAME}/brute,\
			log,msg:'IP: %{REMOTE_ADDR} blocked because of suspected XMLRPC brute force attack'"


    # block all request for specific user account
    SecRule XML:/methodCall/params/param[1]/value "@streq <username>" "phase:2,\
			id:19006,\
			deny,\
			redirect:https://%{SERVER_NAME}/brute,\
			log,msg:'XMLRPC - <username> not allowed'"    

</LocationMatch>
